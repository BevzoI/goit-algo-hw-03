from pathlib import Path
import shutil
import argparse
import sys

def copy_and_sort_files(src_dir: Path, dest_dir: Path):
    """
    –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–æ–ø—ñ—é—î —Ñ–∞–π–ª–∏ –∑ src_dir –¥–æ dest_dir, —Å–æ—Ä—Ç—É—î —ó—Ö —É –ø—ñ–¥–ø–∞–ø–∫–∏ –∑–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º.
    """
    try:
        for item in src_dir.iterdir():
            if item.is_dir():
                # –†–µ–∫—É—Ä—Å–∏–≤–Ω–∏–π –≤–∏–∫–ª–∏–∫ –¥–ª—è –ø—ñ–¥–∫–∞—Ç–∞–ª–æ–≥—ñ–≤
                copy_and_sort_files(item, dest_dir)
            elif item.is_file():
                ext = item.suffix[1:].lower() if item.suffix else "no_extension"
                target_subdir = dest_dir / ext
                target_subdir.mkdir(parents=True, exist_ok=True)

                target_file_path = target_subdir / item.name

                try:
                    shutil.copy2(item, target_file_path)
                    print(f"‚úÖ –°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ: {item} ‚Üí {target_file_path}")
                except Exception as e:
                    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—ñ {item}: {e}")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø—ñ –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó {src_dir}: {e}")


def parse_arguments():
    parser = argparse.ArgumentParser(description="–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–æ–ø—ñ—é—î —Ñ–∞–π–ª–∏ —Ç–∞ —Å–æ—Ä—Ç—É—î –∑–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º.")
    parser.add_argument("src", type=Path, help="–®–ª—è—Ö –¥–æ –≤–∏—Ö—ñ–¥–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó")
    parser.add_argument("dest", type=Path, nargs="?", default=Path("dist"), help="–®–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: dist)")
    return parser.parse_args()


def main():
    args = parse_arguments()
    src_dir = args.src.resolve()
    dest_dir = args.dest.resolve()

    if not src_dir.exists() or not src_dir.is_dir():
        print(f"‚ùå –í–∏—Ö—ñ–¥–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {src_dir}")
        sys.exit(1)

    dest_dir.mkdir(parents=True, exist_ok=True)

    print(f"üöÄ –ü–æ—á–∏–Ω–∞—î–º–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –∑ {src_dir} –¥–æ {dest_dir}...\n")
    copy_and_sort_files(src_dir, dest_dir)
    print("\n‚úÖ –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")


if __name__ == "__main__":
    main()
